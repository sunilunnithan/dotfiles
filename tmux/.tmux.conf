# Make it use C-a similar to screen
set -g prefix C-a

# Ensure that we can send Ctrl-A to other apps
bind-key C-a send-prefix

#default command
# set -g default-command "zsh"

set -g base-index 1           # start indexing windows at 1 instead of 0
set -g detach-on-destroy off  # don't exit from tmux when closing a session 
set -g escape-time 0          # zero-out escape time delay
set -g history-limit 1000000  # significantly increase history size
set -g mouse on               # enable mouse support
set -g renumber-windows on    # renumber all windows when any window is closed
set -g set-clipboard on       # use system clipboard
set -g status-interval 2      # update status every 2 seconds
set -g status-left-length 200 # increase status line length
set -g status-position bottom    # macOS / darwin style
set -g status-right ''        # empty
setw -g mode-keys vi
setw -g monitor-activity on
set -g visual-activity on
setw -g automatic-rename off  # turn off automatic-rename
set-option -g focus-events on
set -g visual-bell on         # Don't beep at me, but print a message on the status line
set -g mouse on               # support for mouse

# set the terminal type to be something useful and 256color
set-option -g default-terminal        'xterm-256color'
# set-option -g terminal-overrides      ',xterm-256color:RGB'

# window management
bind N command-prompt "new-window -n '%%'"
bind c new-window -c "#{pane_current_path}"
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'
bind g   new-window   -n 'git' lazygit
bind H   new-window   -n 'htop' htop
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r i run-shell "tmux neww ~/.local/bin/tmux-cht.sh"
bind-key -r N run-shell "tmux neww ~/.local/bin/dailynotes.sh"
#bind-key t split-window -h -c ~/ "vim todo.md"

# pane management
bind y setw synchronize-panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 2
bind-key b break-pane -d               # break pane

# Prompted join-pane
# bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key C-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

#Reload Key
bind r source-file ~/.tmux.conf \; display "Reloaded"


# status color
set -g status-fg white
set -g status-bg black
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I  #[fg=cyan]#P"
set -g status-right '#[fg=cyan]%d %b %R #(who | cut -d " " -f1) #[fg=green]Load:#(cut -d " " -f1-3 /proc/loadavg)'
bind-key S set -g status # Toggle status bar display with "s"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?nvim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

# Fuzzy matching session navigation via fzf utility
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'joshmedeski/tmux-fzf-url'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

run '~/.tmux/plugins/tpm/tpm' # always at end of file
